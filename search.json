[{"path":"https://mpadge.github.io/gender-conscious-routing/articles/gender-encoding.html","id":"gender-encoding","dir":"Articles","previous_headings":"","what":"Gender Encoding","title":"Gender Encoding","text":"R package includes internally bundled C library categorising gender first names, thanks Michael Jörg (available ). library extremely fast flexible; covers European languages host others, categorises gender accurately. ’s test run large data set names English-speaking world: Categorising 258,000 names took 0.254 seconds, around 100,000 names per second. following code compares accuracy, noting many names course unisex, whereas “baby-names” data direct records individual names sex. Noting baby name records structured time, include many repeats names, can try create “mostly girl/boy” categories based relative proportions. values relative proportions selected give good agreement observed overall distribution categories determined internal library. two refined data sets can compared: names simply found, ’ll remove comparison calculating final statistics. accuracy case ","code":"u <- \"https://github.com/hadley/data-baby-names/raw/master/baby-names.csv\" if (!file.exists (\"baby-names.csv\"))     chk <- download.file (u, \"baby-names.csv\") n <- read.csv (\"baby-names.csv\", stringsAsFactors = FALSE) format (nrow (n), big.mark = \",\") #> [1] \"258,000\" st <- system.time (x <- get_gender (n$name)) st #>    user  system elapsed  #>   0.198   0.056   0.254 knitr::kable (table (x$gender)) knitr::kable (table (n$sex)) x$gender [x$gender == \"IS_MALE\"] <- \"boy\" x$gender [x$gender == \"IS_MOSTLY_MALE\"] <- \"boy\" x$gender [x$gender == \"IS_FEMALE\"] <- \"girl\" x$gender [x$gender == \"IS_MOSTLY_FEMALE\"] <- \"girl\"  index_right <- which (x$gender == n$sex) message (format (length (index_right), big.mark = \",\"), \" / \",          format (nrow (x), big.mark = \",\"),          \" of names correctly classified = \",          formatC (100 * length (index_right) / nrow (x),                   format = \"f\", digits = 1), \"%\") #> 217,630 / 258,000 of names correctly classified = 84.4% library (dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  categorise_sex <-  function (sex, size) {     # define relative proportions:     # if > rel_props [2], then category is singular     # else if > rel_props [1], then category is \"mostly\" singular,     # else category is unisex     rel_props <- c (4, 1000)      if (length (size) == 1)       return (sex)      bi <- which (sex == \"boy\")     gi <- which (sex == \"girl\")      if (size [bi] > (size [gi] * rel_props [2]))         return (\"boy\")     else if (size [gi] > (size [bi] * rel_props [2]))         return (\"girl\")     else if (size [bi] > (size [gi] * rel_props [1]))         return (\"mostly boy\")     else if (size [gi] > (size [bi] * rel_props [1]))         return (\"mostly girl\")     else         return (\"unisex\")     } n2 <- n |>     group_by (name, sex) |>     summarise (size = n ()) |>     group_by (name) |>     summarise (category = categorise_sex (sex, size)) #> `summarise()` has grouped output by 'name'. You can override using the #> `.groups` argument. knitr::kable (table (n2$category)) n2$gender <- get_gender (n2$name)$gender n2$gender [n2$gender == \"IS_FEMALE\"] <- \"girl\" n2$gender [n2$gender == \"IS_MALE\"] <- \"boy\" n2$gender [n2$gender == \"IS_MOSTLY_FEMALE\"] <- \"mostly girl\" n2$gender [n2$gender == \"IS_MOSTLY_MALE\"] <- \"mostly boy\" n2$gender [n2$gender == \"IS_UNISEX_NAME\"] <- \"unisex\" n2 <- n2 [which (!n2$gender == \"NAME_NOT_FOUND\"), ] knitr::kable (with (n2, table (category, gender))) ct <- with (n2, table (category, gender)) sum (diag (ct)) / sum (ct) #> [1] 0.8196923"},{"path":"https://mpadge.github.io/gender-conscious-routing/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Padgham. Author, maintainer. Jörg Michael. Copyright holder.            Original author included gender code","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Padgham M (2022). genderconsciousrouting: Gender-Conscious Routing Along Streets Named Women Rather Men. https://github.com/mpadge/gender-conscious-routing, https://mpadge.github.io/gender-conscious-routing/.","code":"@Manual{,   title = {genderconsciousrouting: Gender-Conscious Routing Along Streets Named After Women Rather Than Men},   author = {Mark Padgham},   year = {2022},   note = {https://github.com/mpadge/gender-conscious-routing, https://mpadge.github.io/gender-conscious-routing/}, }"},{"path":"https://mpadge.github.io/gender-conscious-routing/index.html","id":"gender-conscious-routing","dir":"","previous_headings":"","what":"Gender-Conscious Routing Along Streets Named After Women Rather\n    Than Men","title":"Gender-Conscious Routing Along Streets Named After Women Rather\n    Than Men","text":"Routing along streets named women rather men.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/index.html","id":"a-note-on-gender","dir":"","previous_headings":"","what":"A note on gender","title":"Gender-Conscious Routing Along Streets Named After Women Rather\n    Than Men","text":"possible, gender identified wikidata entries, accommodate values female, male, intersex, transgender female, transgender male. Street names associated Open Street Map wikidata entries assigned genders using internally-bundled library presumes gender binary. . package developers neither endorse encourage viewing gender binary terms. library nevertheless allows gender associations wide variety languages, far equivalent library, allows functionality package applied far greater regions world , non-binary alternatives. See vignette detail gender encoding system used .","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/index.html","id":"generating-gender-conscious-routes","dir":"","previous_headings":"","what":"Generating gender-conscious routes","title":"Gender-Conscious Routing Along Streets Named After Women Rather\n    Than Men","text":"function conscious_route() calculates routes preferentially traverse streets named women. Usage requires downloading street network, simplest way use dodgr package. good practice save networks locally, avoid repeat calls Open Street Map servers deliver data. gender streets can appended network data gender_streetnet() function, also accepts additional parameter, wt_profile, used specify weighting profile profiles dodgr package. Gender-conscious routes can generated specifying start end points. following example selects random points network vertices. id values Open Street Map identifiers two random vertices (“nodes” Open Street Map terms) network. Finally, following code calculates path traverses greatest proportional length along streets named women: function returns list following three items: p_stats providing statistics absolute relative distances along types ways (“non” suffixes denote ways named people). paths providing path geometries, gender-conscious route, “default” route follow gender conscious paths; points locations specified start end points, along colour codes can used clearly indicate points interactive maps.","code":"city <- \"Aachen Germany\" net <- dodgr::dodgr_streetnet_sc (city) saveRDS (net, \"mynetwork.Rds\") library (genderconsciousrouting) net <- gender_streetnet (dat, wt_profile = \"foot\") v <- dodgr::dodgr_vertices (net) set.seed (1) start <- sample (v$id, size = 1L) stop <- sample (v$id, size = 1L) conscious_route (net, start = start, stop = stop) #> $p_stats #>         d_female  d_male    d_non  p_female     p_male     p_non path_length path_length_rel #> default    0.000 190.454 8277.046 0.0000000 0.02249235 0.9775076     8467.50        1.000000 #> female  1826.583 335.371 8083.941 0.1782746 0.03273223 0.7889932    10245.89        1.210026 #>  #> $paths #>      type                       geometry #> 1 default LINESTRING (6.166698 50.812... #> 2  female LINESTRING (6.166698 50.812... #n> #> $points #>               x        y    colour #> 25722  6.166698 50.81288 #44FF22FF #> 137140 6.020574 50.75566 #FF4422FF"},{"path":"https://mpadge.github.io/gender-conscious-routing/index.html","id":"aggregate-statistics-for-a-whole-city","dir":"","previous_headings":"","what":"Aggregate statistics for a whole city","title":"Gender-Conscious Routing Along Streets Named After Women Rather\n    Than Men","text":"Aggregate analyses statistics gender street names can seen EqualStreetNames project, currently provides interactive visualisations 45 cities around world. results , however, static, quantify overall proportions regardless streets located. Many cities consciously name central avenues boulevards men, streets named women may placed peripheral locations rarely traversed general population. appropriate way quantify statistics relative gender proportions weight gendered streets importance within spatially-explicit context entire street network. direct way weight gender-specific street segment corresponding network centrality, central segments traversed large numbers people contribute peripheral segments. genderconsciousrouting package additional function performs analyses given city. function works tracing routes randomly sampled points network, default calculate possible paths pairs vertices street network. function takes considerably time calculate simple route function demonstrated , recommended first specify value number sampled points around 1,000. time taken can scaled default total number points, equal nrow(dodgr_vertices(net)), estimate long full calculation might take. first 8 statistics (capitalised values category) divided “raw” weighted statistics, former simple aggregate proportions type presented EqualStreetNames, without _raw suffix weighted network centrality, central streets contribute . final four statistics quantify proportions journeys along dedicated infrastructure, primarily intended quantify relative prominence dedicated pedestrian (wt_profile = \"foot\") bicycle (wt_profile = \"bicycle\") infrastructure cities. vehicular_foot rows quantify proportions journeys overall edge lengths (_RAW) pedestrian bicycle infrastructure travels directly beside vehicular ways, rather dedicated infrastructure.","code":"dat <- gcr_city (net, n = 1000) ▶ Contracting street network ... ✔ Contracted street network ▶ Calculating routes (1/2) ... ▶ Calculated routes (1/2) ✔ Calculating routes (2/2) ... ▶ Calculated routes (2/2)  print (dat) #>    wt_profile           category  proportion #> 1        foot          IS_FEMALE 0.002963653 #> 2        foot            IS_MALE 0.021652605 #> 3        foot         NOT_A_NAME 0.975383742 #> 4        foot          IS_A_NAME 0.024616258 #> 5        foot      IS_FEMALE_RAW 0.006148932 #> 6        foot        IS_MALE_RAW 0.025953586 #> 7        foot     NOT_A_NAME_RAW 0.967897482 #> 8        foot      IS_A_NAME_RAW 0.032102518 #> 9        foot         pedestrian 0.447916183 #> 10       foot     vehicular_foot 0.500669268 #> 11       foot     pedestrian_RAW 0.255423713 #> 12       foot vehicular_foot_RAW 0.697429330"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/conscious_route.html","id":null,"dir":"Reference","previous_headings":"","what":"conscious_route — conscious_route","title":"conscious_route — conscious_route","text":"Route nominated start end points along greatest proportional length streets named women rather men.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/conscious_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"conscious_route — conscious_route","text":"","code":"conscious_route(net, start = NULL, stop = NULL, gender_weight = 10)"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/conscious_route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"conscious_route — conscious_route","text":"net Street network gender column, returned gender_streetnet function. start Start point route. stop End point route. gender_weight numeric factor >= 1 preferentially route along streets named women. Larger values search larger distances relative default (shortest) route find routes greatest proportional distances along streets named women. Arbitrarily large values may specified.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gcr_city.html","id":null,"dir":"Reference","previous_headings":"","what":"gcr_city — gcr_city","title":"gcr_city — gcr_city","text":"Analyse entire properties one city","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gcr_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gcr_city — gcr_city","text":"","code":"gcr_city(net, wt_profile = \"foot\", n = NULL, quiet = FALSE)"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gcr_city.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gcr_city — gcr_city","text":"net Street network osmdata_sc format. wt_profile Type weighting profile street network routing,. n Number pints used calculate pair-wise routes along aggregate statistics. value specified, routes calculated pairs entire network. quiet FALSE, display progress information screen.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gender_streetnet.html","id":null,"dir":"Reference","previous_headings":"","what":"gender_streetnet — gender_streetnet","title":"gender_streetnet — gender_streetnet","text":"Weight street network via dodgr function weight_streetnet, adding additional information gender street names","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gender_streetnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gender_streetnet — gender_streetnet","text":"","code":"gender_streetnet(net, wt_profile = \"foot\", country = \"de\")"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gender_streetnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gender_streetnet — gender_streetnet","text":"net Street network sf sc format wt_profile Type weighting used; see dodgr::weight_streetnet details. country Country gender determined, either ISO3166 two-letter abbreviation, full text. See list_countries list recognized countries.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/gender_streetnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gender_streetnet — gender_streetnet","text":"weighted street network dodgr format.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/genderconsciousrouting.html","id":null,"dir":"Reference","previous_headings":"","what":"genderconsciousrouting — genderconsciousrouting","title":"genderconsciousrouting — genderconsciousrouting","text":"Gender-Correct Routing Along Streets Named Women Rather Men","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/get_gender.html","id":null,"dir":"Reference","previous_headings":"","what":"get_gender — get_gender","title":"get_gender — get_gender","text":"Get gender character vector","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/get_gender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_gender — get_gender","text":"","code":"get_gender(text, country = NULL)"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/get_gender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_gender — get_gender","text":"text character vector encode country Country gender determined, either ISO3166 two-letter abbreviation, full text. See list_countries list recognized countries.","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/get_gender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_gender — get_gender","text":"data.frame text gender attached","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/list_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"list_countries — list_countries","title":"list_countries — list_countries","text":"List countries included first name gender matcher","code":""},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/list_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list_countries — list_countries","text":"","code":"list_countries()"},{"path":"https://mpadge.github.io/gender-conscious-routing/reference/list_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list_countries — list_countries","text":"data.frame object country names associated ISO3166 abbreviations.","code":""}]
